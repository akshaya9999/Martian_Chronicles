# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.8
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel, QGridLayout, QWidget ,QMessageBox,QTextBrowser

import shutil
import requests
import os
import ezgmail
from pathlib import Path

from dotenv import load_dotenv
load_dotenv()





class Ui_MainWindow(object):
    noofimg=0
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(950, 604)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setAutoFillBackground(True)
        self.centralwidget.setObjectName("centralwidget")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 951, 621))
        self.stackedWidget.setAutoFillBackground(True)
        self.stackedWidget.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));")
        self.stackedWidget.setObjectName("stackedWidget")
        self.page1 = QtWidgets.QWidget()
        self.page1.setObjectName("page1")
        self.topage2 = QtWidgets.QPushButton(self.page1)
        self.topage2.setGeometry(QtCore.QRect(380, 410, 171, 71))
        self.topage2.setStyleSheet("font: 600 11pt \"URW Bookman\";\n"
"alternate-background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(9, 41, 4, 255), stop:0.085 rgba(2, 79, 0, 255), stop:0.19 rgba(50, 147, 22, 255), stop:0.275 rgba(236, 191, 49, 255), stop:0.39 rgba(243, 61, 34, 255), stop:0.555 rgba(135, 81, 60, 255), stop:0.667 rgba(121, 75, 255, 255), stop:0.825 rgba(164, 255, 244, 255), stop:0.885 rgba(104, 222, 71, 255), stop:1 rgba(93, 128, 0, 255));")
        self.topage2.setObjectName("topage2")
        self.label = QtWidgets.QLabel(self.page1)
        self.label.setGeometry(QtCore.QRect(470, 10, 471, 361))
        self.label.setAutoFillBackground(False)
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("../Pictures/marsrov.jpeg"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.instructionsbutton = QtWidgets.QPushButton(self.page1)
        self.instructionsbutton.setGeometry(QtCore.QRect(380, 490, 171, 41))
        self.instructionsbutton.setStyleSheet("font: 600 11pt \"URW Bookman\";")
        self.instructionsbutton.setObjectName("instructionsbutton")
        self.textBrowser_10 = QtWidgets.QTextBrowser(self.page1)
        self.textBrowser_10.setGeometry(QtCore.QRect(10, 70, 461, 141))
        self.textBrowser_10.setStyleSheet("\n"
"font: 700 italic 40pt \"Z003\";")
        self.textBrowser_10.setObjectName("textBrowser_10")
        self.stackedWidget.addWidget(self.page1)
        self.page2 = QtWidgets.QWidget()
        self.page2.setObjectName("page2")
        self.textBrowser = QtWidgets.QTextBrowser(self.page2)
        self.textBrowser.setGeometry(QtCore.QRect(0, 0, 331, 51))
        self.textBrowser.setStyleSheet("background-color: rgb(222, 221, 218);\n"
"font: 600 11pt \"URW Bookman\";\n"
"alternate-background-color: rgb(222, 221, 218);")
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.page2)
        self.textBrowser_2.setGeometry(QtCore.QRect(0, 70, 331, 41))
        self.textBrowser_2.setStyleSheet("background-color: rgb(222, 221, 218);\n"
"alternate-background-color: rgb(222, 221, 218);")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.rovername = QtWidgets.QComboBox(self.page2)
        self.rovername.setGeometry(QtCore.QRect(0, 110, 331, 31))
        self.rovername.setStyleSheet("background-color: rgb(222, 221, 218);\n"
"alternate-background-color: rgb(222, 221, 218);")
        self.rovername.setObjectName("rovername")
        self.rovername.addItem("")
        self.rovername.addItem("")
        self.rovername.addItem("")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.page2)
        self.textBrowser_3.setGeometry(QtCore.QRect(0, 160, 331, 51))
        self.textBrowser_3.setStyleSheet("background-color: rgb(222, 221, 218);\n"
"alternate-background-color: rgb(222, 221, 218);")
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.cameraname = QtWidgets.QComboBox(self.page2)
        self.cameraname.setGeometry(QtCore.QRect(0, 210, 331, 31))
        self.cameraname.setStyleSheet("background-color: rgb(222, 221, 218);\n"
"alternate-background-color: rgb(222, 221, 218);")
        self.cameraname.setObjectName("cameraname")
        self.cameraname.addItem("")
        self.cameraname.addItem("")
        self.cameraname.addItem("")
        self.cameraname.addItem("")
        self.cameraname.addItem("")
        self.cameraname.addItem("")
        self.cameraname.addItem("")
        self.cameraname.addItem("")
        self.cameraname.addItem("")
        self.earthdate = QtWidgets.QDateEdit(self.page2)
        self.earthdate.setGeometry(QtCore.QRect(0, 330, 331, 31))
        self.earthdate.setStyleSheet("background-color: rgb(222, 221, 218);\n"
"alternate-background-color: rgb(222, 221, 218);")
        self.earthdate.setObjectName("earthdate")
        self.fetchimbutton = QtWidgets.QPushButton(self.page2)
        self.fetchimbutton.setGeometry(QtCore.QRect(70, 390, 181, 71))
        self.fetchimbutton.setStyleSheet("font: 600 11pt \"URW Bookman\";")
        self.fetchimbutton.setObjectName("fetchimbutton")
        self.pushButton = QtWidgets.QPushButton(self.page2)
        self.pushButton.setGeometry(QtCore.QRect(410, 490, 89, 25))
        self.pushButton.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.pushButton.setObjectName("pushButton")
        self.nextbutton = QtWidgets.QPushButton(self.page2)
        self.nextbutton.setGeometry(QtCore.QRect(810, 490, 89, 25))
        self.nextbutton.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.nextbutton.setObjectName("nextbutton")
        self.label_2 = QtWidgets.QLabel(self.page2)
        self.label_2.setGeometry(QtCore.QRect(390, 30, 531, 451))
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.topage3 = QtWidgets.QPushButton(self.page2)
        self.topage3.setGeometry(QtCore.QRect(800, 540, 141, 41))
        self.topage3.setStyleSheet("\n"
"font: 600 11pt \"URW Bookman\";")
        self.topage3.setObjectName("topage3")
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.page2)
        self.textBrowser_4.setGeometry(QtCore.QRect(0, 260, 331, 61))
        self.textBrowser_4.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.backtomainbut_3 = QtWidgets.QPushButton(self.page2)
        self.backtomainbut_3.setGeometry(QtCore.QRect(0, 540, 161, 41))
        self.backtomainbut_3.setStyleSheet("font: 600 11pt \"URW Bookman\";")
        self.backtomainbut_3.setObjectName("backtomainbut_3")
        self.textBrowser_11 = QtWidgets.QTextBrowser(self.page2)
        self.textBrowser_11.setGeometry(QtCore.QRect(440, 0, 431, 31))
        self.textBrowser_11.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.textBrowser_11.setObjectName("textBrowser_11")
        self.textBrowser_12 = QtWidgets.QTextBrowser(self.page2)
        self.textBrowser_12.setGeometry(QtCore.QRect(0, 470, 341, 51))
        self.textBrowser_12.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.textBrowser_12.setObjectName("textBrowser_12")
        self.stackedWidget.addWidget(self.page2)
        self.page3 = QtWidgets.QWidget()
        self.page3.setObjectName("page3")
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.page3)
        self.textBrowser_5.setGeometry(QtCore.QRect(0, 0, 361, 51))
        self.textBrowser_5.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.textBrowser_6 = QtWidgets.QTextBrowser(self.page3)
        self.textBrowser_6.setGeometry(QtCore.QRect(0, 80, 361, 41))
        self.textBrowser_6.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.textBrowser_6.setObjectName("textBrowser_6")
        self.mailid = QtWidgets.QTextEdit(self.page3)
        self.mailid.setGeometry(QtCore.QRect(0, 130, 361, 71))
        self.mailid.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.mailid.setObjectName("mailid")
        self.textBrowser_7 = QtWidgets.QTextBrowser(self.page3)
        self.textBrowser_7.setGeometry(QtCore.QRect(0, 230, 361, 51))
        self.textBrowser_7.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.textBrowser_7.setObjectName("textBrowser_7")
        self.mailsub = QtWidgets.QTextEdit(self.page3)
        self.mailsub.setGeometry(QtCore.QRect(0, 290, 361, 61))
        self.mailsub.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.mailsub.setObjectName("mailsub")
        self.textBrowser_8 = QtWidgets.QTextBrowser(self.page3)
        self.textBrowser_8.setGeometry(QtCore.QRect(0, 380, 361, 61))
        self.textBrowser_8.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.textBrowser_8.setObjectName("textBrowser_8")
        self.mailbody = QtWidgets.QTextEdit(self.page3)
        self.mailbody.setGeometry(QtCore.QRect(0, 450, 361, 101))
        self.mailbody.setStyleSheet("background-color: rgb(222, 221, 218);")
        self.mailbody.setObjectName("mailbody")
        self.sendbutton = QtWidgets.QPushButton(self.page3)
        self.sendbutton.setGeometry(QtCore.QRect(450, 480, 201, 71))
        self.sendbutton.setStyleSheet("font: 600 11pt \"URW Bookman\";")
        self.sendbutton.setObjectName("sendbutton")
        self.backtomainbut_2 = QtWidgets.QPushButton(self.page3)
        self.backtomainbut_2.setGeometry(QtCore.QRect(820, 530, 131, 51))
        self.backtomainbut_2.setStyleSheet("font: 600 11pt \"URW Bookman\";")
        self.backtomainbut_2.setObjectName("backtomainbut_2")
        self.stackedWidget.addWidget(self.page3)
        self.page = QtWidgets.QWidget()
        self.page.setAutoFillBackground(True)
        self.page.setObjectName("page")
        self.textBrowser_9 = QtWidgets.QTextBrowser(self.page)
        self.textBrowser_9.setGeometry(QtCore.QRect(60, 40, 811, 471))
        self.textBrowser_9.setStyleSheet("font: 600 11pt \"URW Bookman\";\n"
"background-color: rgb(222, 221, 218);")
        self.textBrowser_9.setObjectName("textBrowser_9")
        self.backtomainbut = QtWidgets.QPushButton(self.page)
        self.backtomainbut.setGeometry(QtCore.QRect(330, 520, 301, 41))
        self.backtomainbut.setStyleSheet("font: 600 11pt \"URW Bookman\";")
        self.backtomainbut.setObjectName("backtomainbut")
        self.stackedWidget.addWidget(self.page)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)



        self.sendbutton.clicked.connect(self.pressed)
        self.fetchimbutton.clicked.connect(self.display)
        self.nextbutton.clicked.connect(self.next)
        self.pushButton.clicked.connect(self.prev)


        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

         #navigating pages
        self.topage2.clicked.connect(lambda:self.stackedWidget.setCurrentWidget(self.page2))
        self.instructionsbutton.clicked.connect(lambda:self.stackedWidget.setCurrentWidget(self.page))
        self.topage3.clicked.connect(lambda:self.stackedWidget.setCurrentWidget(self.page3))
        self.backtomainbut.clicked.connect(lambda:self.stackedWidget.setCurrentWidget(self.page1))
        self.backtomainbut_2.clicked.connect(lambda:self.stackedWidget.setCurrentWidget(self.page1))
        self.backtomainbut_3.clicked.connect(lambda:self.stackedWidget.setCurrentWidget(self.page1))
        

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.topage2.setText(_translate("MainWindow", "START"))
        self.instructionsbutton.setText(_translate("MainWindow", "INSTRUCTIONS"))
        self.textBrowser_10.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Z003\'; font-size:40pt; font-weight:700; font-style:italic;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Ubuntu\'; font-weight:400; text-decoration: underline;\">MARTIAN </span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Ubuntu\'; font-size:30pt; font-weight:400; text-decoration: underline;\">CHRONICLES</span></p></body></html>"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'URW Bookman\'; font-size:11pt; font-weight:600; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Ubuntu\'; font-weight:700; text-decoration: underline;\">ENTER THE PARAMETERES FOR GETTING THE IMAGE</span></p></body></html>"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">SELECT ROVER NAME</p></body></html>"))
        self.rovername.setItemText(0, _translate("MainWindow", "CURIOSITY"))
        self.rovername.setItemText(1, _translate("MainWindow", "OPPORTUNITY"))
        self.rovername.setItemText(2, _translate("MainWindow", "SPIRIT"))
        self.textBrowser_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">SELECT CAMERA NAME</p></body></html>"))
        self.cameraname.setItemText(0, _translate("MainWindow", "FHAZ"))
        self.cameraname.setItemText(1, _translate("MainWindow", "RHAZ"))
        self.cameraname.setItemText(2, _translate("MainWindow", "MAST"))
        self.cameraname.setItemText(3, _translate("MainWindow", "CHEMCAM"))
        self.cameraname.setItemText(4, _translate("MainWindow", "MAHLI"))
        self.cameraname.setItemText(5, _translate("MainWindow", "MARDI"))
        self.cameraname.setItemText(6, _translate("MainWindow", "NAVCAM"))
        self.cameraname.setItemText(7, _translate("MainWindow", "PANCAM"))
        self.cameraname.setItemText(8, _translate("MainWindow", "MINITES"))
        self.fetchimbutton.setText(_translate("MainWindow", "FETCH IMAGE"))
        self.pushButton.setText(_translate("MainWindow", "PREVIOUS"))
        self.nextbutton.setText(_translate("MainWindow", "NEXT"))
        self.topage3.setText(_translate("MainWindow", "MAIL"))
        self.textBrowser_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">ENTER EARTH DATE</p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">MM/DD/YY</p></body></html>"))
        self.backtomainbut_3.setText(_translate("MainWindow", "HOME"))
        self.textBrowser_11.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:700;\">NOTE: Fetching images may take a few minutes,kindly wait</span></p></body></html>"))
        self.textBrowser_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:700; text-decoration: underline;\">MAIL DETAILS</span></p></body></html>"))
        self.textBrowser_6.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Enter mail id(s)</p></body></html>"))
        self.textBrowser_7.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Enter subject</p></body></html>"))
        self.textBrowser_8.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Enter body of mail</p></body></html>"))
        self.sendbutton.setText(_translate("MainWindow", "SEND MAIL"))
        self.backtomainbut_2.setText(_translate("MainWindow", "HOME"))
        self.textBrowser_9.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'URW Bookman\'; font-size:11pt; font-weight:600; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Ubuntu\'; font-size:20pt; font-weight:400;\">Hi there, and welcome to </span><span style=\" font-family:\'Ubuntu\'; font-size:20pt; font-weight:400; text-decoration: underline;\">MARTIAN CHRONICLES</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Ubuntu\'; font-size:20pt; font-weight:400;\">After starting you will be presented with some options according to which you will get the pictures taken by the mars rovers.Just press the fetch image button to display the images.</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Ubuntu\'; font-size:20pt; font-weight:400;\">After getting the image you can also send the mail to your friends and loved ones,and let them enjoy the beauty of mars.</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Ubuntu\'; font-size:20pt; font-weight:400;\">Just press the MAIL button and you will be taken to a page where you can input the email id and other details and the images will be send as attachments.</span></p></body></html>"))
        self.backtomainbut.setText(_translate("MainWindow", "HOME"))

           
    k=0 
    def display(self):
        # global rover,camera,date,emailid,subject,body
        rover=self.rovername.currentText()
        # print(rover)
        camera=self.cameraname.currentText()
        # print(camera)
        dateex=self.earthdate.date()
        date=dateex.toPyDate()
        print(date)
        # sol=self.lineEdit.text()
        # sol={sol}&


        #getting img links
     
        apikeyex=str(os.getenv('apiakhil'))
        api_url=f'https://api.nasa.gov/mars-photos/api/v1/rovers/{rover}/photos?earth_date={date}&camera={camera}&api_key={apikeyex}'
        image_url=[]
        data=requests.get(api_url).json()
        # print(data)
        for i in data['photos']:
        #     print(i)
            x=i['img_src']
            image_url.append(x)
        print(image_url)
        noofimg=len(image_url)
        self.textBrowser_12.insertPlainText(f'The no of images obtained is {noofimg}\n')
        
        if noofimg==0:
                msgbox= QMessageBox()
                msgbox.setIcon(QMessageBox.Information)
                msgbox.setText("Sorry,there are no images with the current specifications . Please try again with another date or set of specifications")
                msgbox.setWindowTitle("Image status")
                msgbox.setStandardButtons(QMessageBox.Ok)
                msgbox.exec()



        #for image downld

        os.makedirs('images',exist_ok=True)
        for j in image_url:
            print(j)
            res=requests.get(j)
            res.raise_for_status()
            imagefile=open(os.path.join('images',os.path.basename(j)),'wb')
            for chunk in res.iter_content(100000):
                imagefile.write(chunk)
            imagefile.close
        k=0
        for filename in os.listdir('/home/akshaya/Martian_Cronicles/images'):
                exname=f'/home/akshaya/Martian_Cronicles/images/{filename}'
                newname=f'/home/akshaya/Martian_Cronicles/images/{k}.JPG'
                os.rename(exname,newname)
                k+=1
        
        pixmap=QPixmap(f'images/{self.imgnoo}.JPG')
        self.label_2.setPixmap(pixmap)
        self.label_2.setScaledContents(True)
        noofimg=len(image_url)
        
    
    imgnoo=0
    
#     print(noofimg)
#     nextimgno=imgnoo+1
#     previmgno=imgnoo-1
    def next(self):
        noofimg=len(os.listdir('/home/akshaya/Martian_Cronicles/images'))
        # print(self.imgnoo)
        if self.imgnoo<noofimg-1:
                self.imgnoo+=1
                # print(self.imgnoo)
                pixmap=QPixmap(f'images/{self.imgnoo}.JPG')
                self.label_2.setPixmap(pixmap)
                self.label_2.setScaledContents(True)
        elif self.imgnoo>=noofimg-1:
                # print(self.imgnoo)
                pixmap=QPixmap(f'images/{self.noofimg+1}.JPG')
                self.label_2.setPixmap(pixmap)
                self.label_2.setScaledContents(True)
                
        # self.nextimgno+=1

    x=0
    def prev(self):
        if self.imgnoo>0:
                self.imgnoo-=1
                # print(self.imgnoo)
                pixmap=QPixmap(f'images/{self.imgnoo}.JPG')
                self.label_2.setPixmap(pixmap)
                self.label_2.setScaledContents(True)
        elif self.imgnoo<=0:
                # print(self.imgnoo)
                pixmap=QPixmap(f'images/{self.x}.JPG')
                self.label_2.setPixmap(pixmap)
                self.label_2.setScaledContents(True)

        # self.previmgno-=1
        
    
    def pressed(self):
        emailidex=self.mailid.toPlainText()
        emailid=[]
        emailid=emailidex.split('\n')
        # print(emailid)
        subject=self.mailsub.toPlainText()
        # print(subject)
        body=self.mailbody.toPlainText()
        # print(body)


        #to send mail
        try:
                for i in emailid: 
                        os.chdir('/home/akshaya/Martian_Cronicles/images')
                        imname=os.listdir('/home/akshaya/Martian_Cronicles/images')
                        ezgmail.send(i,subject,body,imname)


                msgbox= QMessageBox()
                msgbox.setIcon(QMessageBox.Information)
                msgbox.setText("Email sent succesfully")
                msgbox.setWindowTitle("Email status")
                msgbox.setStandardButtons(QMessageBox.Ok)
                msgbox.exec()
                shutil.rmtree('/home/akshaya/Martian_Cronicles/images')

        except:
                msgbox= QMessageBox()
                msgbox.setIcon(QMessageBox.Information)
                msgbox.setText("There was an error sending the mail,please try again")
                msgbox.setWindowTitle("Email status")
                msgbox.setStandardButtons(QMessageBox.Ok)
                msgbox.exec()




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
